{
	"compiler": {
		"version": "0.8.1+commit.df193b15"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "addresses",
						"type": "address[]"
					}
				],
				"name": "addAdmins",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "chief",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "enroll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feePerUOC",
				"outputs": [
					{
						"internalType": "uint248",
						"name": "",
						"type": "uint248"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getPaidUOC",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getRole",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_maxUOC",
						"type": "uint8"
					},
					{
						"internalType": "uint248",
						"name": "_feePerUOC",
						"type": "uint248"
					}
				],
				"name": "init",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxUOC",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "numUOC",
						"type": "uint8"
					}
				],
				"name": "payFees",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "removeAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint248",
						"name": "_feePerUOC",
						"type": "uint248"
					}
				],
				"name": "setFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_maxUOC",
						"type": "uint8"
					}
				],
				"name": "setMaxUOC",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "transferChief",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"title": "University with roles",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addAdmins(address[])": {
					"notice": "Allows the chief operating officer to grant administrator role to addresses"
				},
				"enroll(bytes32,bytes)": {
					"notice": "Allows a user to join the univerity as a student by providing a message signed by a university administrator"
				},
				"getPaidUOC(address)": {
					"notice": "Allows a user to check the units of credit payed for by a student"
				},
				"getRole(address)": {
					"notice": "Returns the role of an address"
				},
				"init(uint8,uint248)": {
					"notice": "Convenience function to allow the chief to set the contract configuration in one go"
				},
				"payFees(uint8)": {
					"notice": "Allows a student to pay fees for a desired number of units of credit"
				},
				"removeAdmin(address)": {
					"notice": "Allows the chief operating officer to remove the administrator role to addresses"
				},
				"setFee(uint248)": {
					"notice": "Allows the chief operating officer to change the fee per UOC"
				},
				"setMaxUOC(uint8)": {
					"notice": "Allows the chief operating officer to change the maximum UOC a student can take"
				},
				"transferChief(address)": {
					"notice": "Allows the chief operating officer to assign a new chief operating officer"
				},
				"withdraw()": {
					"notice": "Allows the chief operating officer to withdraw money from the contract"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/University.sol": "University"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0x752ac2a89da774de5c98f8ca1adcad306ce00d0ebb547ad7be8ba7e95468aa73",
			"license": "MIT",
			"urls": [
				"bzz-raw://4d684ee425c1b73399887ee6776e45686067b2ed1a20717df71cda6be5406c82",
				"dweb:/ipfs/QmQhfMHrfNYMiHhtNqh95qD55sh4hTed9drMxCVW38CYEA"
			]
		},
		"contracts/AdmissionTokenLib.sol": {
			"keccak256": "0xb16a0dc44fca6af949d09dcd94c0e2d05dbb5b86ff46b713429ed8f3e27e6736",
			"license": "MIT",
			"urls": [
				"bzz-raw://10463ecc4271838f2a97dee44c12779209e493f5ac1677687db1045d02d933d2",
				"dweb:/ipfs/QmVxs8yRVvn8mvpj9YBBryociYvD1jaJS4L8HdabW6QrLq"
			]
		},
		"contracts/University.sol": {
			"keccak256": "0xfb220cf0d765a18402d31cf79c073abb53837926880b5a42c72e50a8129f5a2e",
			"license": "MIT",
			"urls": [
				"bzz-raw://c675856a45fea949ae91551b01e7c60df9b1d3094ae15dd3e41c0d97e491fa23",
				"dweb:/ipfs/QmYo71FDVcbUe5XF55nfn3JHa6uo9MeUT42inAGag83HEJ"
			]
		}
	},
	"version": 1
}